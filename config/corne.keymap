#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3

//testing mouse movement and scroll binds...

&lt {
    tapping-term-ms = <150>;
    flavor = "balanced";
};

&mt {
    tapping-term-ms = <150>;
    flavor = "balanced";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        comma_underscore: comma_underscore {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_UNDERSCORE";
            bindings = <&kp COMMA>, <&kp UNDER>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        period_bang: period_bang {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIOD_BANG";
            bindings = <&kp PERIOD>, <&kp EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        capsword {
            bindings = <&caps_word>;
            key-positions = <10 9>;
        };

        prtscr {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <16 38>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <25 26>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <27 26>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <27 28>;
        };

        save {
            bindings = <&kp LC(S)>;
            key-positions = <25 28>;
        };

        qwerty_toggle {
            bindings = <&tog 4>;
            key-positions = <38 29 28 27 26>;
            layers = <0 4>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp TAB    &kp Q  &kp W           &kp F        &kp P        &kp B      &kp J       &kp L              &kp U              &kp Y            &kp SEMICOLON  &kp BACKSPACE
&kp LSHFT  &kp A  &hm LEFT_ALT R  &hm LCTRL S  &hm LSHFT T  &kp G      &kp M       &hm RSHFT N        &hm RCTRL E        &hm RIGHT_ALT I  &kp O          &kp SQT
&kp LCTRL  &kp Z  &kp X           &kp C        &kp D        &kp V      &kp K       &kp H              &comma_underscore  &period_bang     &kp FSLH       &kp RSHFT
                                  &lt 1 ENTER  &kp SPACE    &kp TAB    &kp DELETE  &kp LC(BACKSPACE)  &lt 2 BACKSPACE
            >;
        };

        NAV {
            display-name = "Nav";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &none         &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none     &none   &kp HOME   &kp UP     &kp END    &none     &trans
&trans  &kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none     &none   &kp LEFT   &kp DOWN   &kp RIGHT  &kp APOS  &trans
&trans  &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none     &trans  &kp PG_UP  &kp PG_DN  &trans     &trans    &trans
                                    &trans        &trans        &trans    &trans  &trans     &trans
            >;
        };

        SYM {
            display-name = "Sym";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp PERCENT  &kp LESS_THAN  &kp GREATER_THAN  &kp TILDE  &kp CARET        &none          &kp AMPS              &kp ASTRK              &kp LEFT_PARENTHESIS  &kp RPAR           &trans
&trans  &kp EXCL     &kp MINUS      &kp PLUS          &kp EQUAL  &kp HASH         &kp PIPE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOLLAR            &kp DOUBLE_QUOTES  &trans
&trans  &none        &kp DELETE     &kp STAR          &kp AT     &kp AMPERSAND    &kp BACKSLASH  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EXCL              &kp QUESTION       &trans
                                    &trans            &trans     &trans           &trans         &trans                &trans
            >;
        };

        ADJ {
            display-name = "System";
            bindings = <
&trans  &kp F1        &kp F2         &kp F3        &kp F4          &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10      &trans
&trans  &hm LGUI F11  &hm LSHFT F12  &bt BT_CLR    &bt BT_CLR_ALL  &studio_unlock    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4      &trans  &trans  &trans  &trans  &bootloader  &trans
                                     &trans        &trans          &trans            &trans  &trans  &trans
            >;
        };

        QWTY {
            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R   &kp T     &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D   &kp F   &kp G     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C   &kp V   &kp B     &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
